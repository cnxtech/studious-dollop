{
  "version": 3,
  "sources": ["../../node_modules/@remix-run/dev/compiler/shims/react.ts", "route-module:/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/tags/tag/$hash.tsx", "route-module:/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/tags/$userId.tsx", "route-module:/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/tags/mint.tsx", "<stdin>", "../../app/entry.server.tsx", "route-module:/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/root.tsx", "../../app/utils/contexts/gun/gun.provider.tsx", "mdx:/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/posts/updates.md", "route-module:/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/posts/$slug.tsx", "../../app/post.ts", "route-module:/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/index.tsx", "route-module:/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/login.tsx", "route-module:/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/start.tsx"],
  "sourcesContent": ["import * as React from \"react\";\nexport { React };\n", "// import { useCatch, Link, json, useLoaderData } from 'remix';\n// import type { LoaderFunction, MetaFunction } from 'remix';\n\n// import { gun } from '~/utils/db/gun';\n// import { today } from '~/utils/dates';\n\n// export function IconButton() {\n//   return (\n//     <button\n//       id=\"instagram\"\n//       className=\"  hover:border-2 border-pink-500 bg-gradient-to-b text-2xl hover:from-indigo-600 hover:via-pink-600 hover:to-yellow-500 hover:text-white bg-white text-pink-600 w-12 h-12  transform hover:-translate-y-3 rounded-full duration-500\"\n//     >\n//       <i className=\"fas fa-hashtag\"></i>\n//     </button>\n//   );\n// }\n\n// let token = gun.get('tokens/v1').get('token');\n// export let loader: LoaderFunction = ({ params }) => {\n//   token.get(`${params.name}`);\n//   let data = token.map().on((data) => {\n//     console.log(data);\n//   });\n\n//   if (params.id === 'this-record-does-not-exist') {\n//     // If the record doesn't exist we can't render the route normally, so\n//     // instead we throw a 404 reponse to stop running code here and show the\n//     // user the catch boundary.\n//     throw new Response('Not Found', { status: 404 });\n//   }\n\n//   // now pretend like the record exists but the user just isn't authorized to\n//   // see it.\n//   if (params.id === 'shh-its-a-secret') {\n//     // Again, we can't render the component if the user isn't authorized. You\n//     // can even put data in the response that might help the user rectify the\n//     // issue! Like emailing the webmaster for access to the page. (Oh, right,\n//     // `json` is just a Response helper that makes it easier to send JSON\n//     // responses).\n//     throw json({ webmasterEmail: 'hello@remix.run' }, { status: 401 });\n//   }\n\n//   // Sometimes your code just blows up and you never anticipated it. Remix will\n//   // automatically catch it and send the UI to the error boundary.\n//   if (params.id === 'kaboom') {\n//     lol();\n//   }\n\n//   // but otherwise the record was found, user has access, so we can do whatever\n//   // else we needed to in the loader and return the data. (This is boring, we're\n//   // just gonna return the params.id).\n//   return { param: data };\n// };\n\n// export default function ParamDemo() {\n//   let data = useLoaderData();\n//   return (\n//     <div>\n//       <h1 className=\"text-3xl text-center font-bold text-blue-500\">\n//         Current Namespaces\n//       </h1>\n//       <div className=\"border-l-2 mt-10\">\n//         {/* <!-- Card 1 --> */}\n//         <div className=\"transform transition cursor-pointer hover:-translate-y-2 ml-10 relative flex items-center px-6 py-4 bg-blue-600 text-white rounded mb-10 flex-col md:flex-row space-y-4 md:space-y-0\">\n//           {/* <!-- Dot Follwing the Left Vertical Line --> */}\n//           {/* <div className=\"w-5 h-5 bg-blue-600 absolute -left-10 transform -translate-x-2/4 rounded-full z-10 mt-2 md:mt-0\"></div> */}\n//           <div className=\"absolute -left-10 transform -translate-x-2/4 rounded-full z-10 mt-2 md:mt-0\">\n//             <IconButton />\n//           </div>\n\n//           {/* <!-- Line that connecting the box with the vertical line --> */}\n//           <div className=\"w-10 h-1 bg-blue-300 absolute -left-10 z-0\"></div>\n\n//           {/* <!-- Content that showing in the box --> */}\n//           <div className=\"flex-auto\">\n//             <h1 className=\"text-lg\">Day 1</h1>\n//             <h1 className=\"text-xl font-bold\">\n//               Orientation and Briefing on Uniliver basics\n//             </h1>\n//             <h3>Classroom</h3>\n//           </div>\n//           <a href=\"#\" className=\"text-center text-white hover:text-gray-300\">\n//             Download materials\n//           </a>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// // https://remix.run/api/conventions#catchboundary\n// // https://remix.run/api/remix#usecatch\n// // https://remix.run/api/guides/not-found\n// export function CatchBoundary() {\n//   let caught = useCatch();\n\n//   let message: React.ReactNode;\n//   switch (caught.status) {\n//     case 401:\n//       message = (\n//         <p>\n//           Looks like you tried to visit a page that you do not have access to.\n//           Maybe ask the webmaster ({caught.data.webmasterEmail}) for access.\n//         </p>\n//       );\n//     case 404:\n//       message = (\n//         <p>Looks like you tried to visit a page that does not exist.</p>\n//       );\n//     default:\n//       message = (\n//         <p>\n//           There was a problem with your request!\n//           <br />\n//           {caught.status} {caught.statusText}\n//         </p>\n//       );\n//   }\n\n//   return (\n//     <>\n//       <h2>Oops!</h2>\n//       <p>{message}</p>\n//       <p>\n//         (Isn't it cool that the user gets to stay in context and try a different\n//         link in the parts of the UI that didn't blow up?)\n//       </p>\n//     </>\n//   );\n// }\n\n// // https://remix.run/api/conventions#errorboundary\n// // https://remix.run/api/guides/not-found\n// export function ErrorBoundary({ error }: { error: Error }) {\n//   console.error(error);\n//   return (\n//     <>\n//       <h2>Error!</h2>\n//       <p>{error.message}</p>\n//       <p>\n//         (Isn't it cool that the user gets to stay in context and try a different\n//         link in the parts of the UI that didn't blow up?)\n//       </p>\n//     </>\n//   );\n// }\n\n// export let meta: MetaFunction = ({ data }) => {\n//   return {\n//     title: data ? `Param: ${data.param}` : 'Oops...',\n//   };\n// };\n// function lol() {\n//   throw new Error('Function not implemented.');\n// }\n", "// import { useCatch, Link, json, useLoaderData } from 'remix';\n// import type { LoaderFunction, MetaFunction } from 'remix';\n// import { IconButton } from './mint';\n// import { useEffect } from 'react';\n// import { createCtxWithReducer } from '~/utils/contexts/ctx.utils';\n\n// // The `$` in route filenames becomes a pattern that's parsed from the URL and\n// // passed to your loaders so you can look up data.\n// // - https://remix.run/api/conventions#loader-params\n// export let loader: LoaderFunction = async ({ params }) => {\n//   // pretend like we're using params.id to look something up in the db\n\n//   if (params.userId === 'this-record-does-not-exist') {\n//     // If the record doesn't exist we can't render the route normally, so\n//     // instead we throw a 404 reponse to stop running code here and show the\n//     // user the catch boundary.\n//     throw new Response('Not Found', { status: 404 });\n//   }\n\n//   // now pretend like the record exists but the user just isn't authorized to\n//   // see it.\n//   if (params.userId === 'shh-its-a-secret') {\n//     // Again, we can't render the component if the user isn't authorized. You\n//     // can even put data in the response that might help the user rectify the\n//     // issue! Like emailing the webmaster for access to the page. (Oh, right,\n//     // `json` is just a Response helper that makes it easier to send JSON\n//     // responses).\n//     throw json({ webmasterEmail: 'hello@remix.run' }, { status: 401 });\n//   }\n\n//   // Sometimes your code just blows up and you never anticipated it. Remix will\n//   // automatically catch it and send the UI to the error boundary.\n//   if (params.userId === 'kaboom') {\n//   }\n\n//   // but otherwise the record was found, user has access, so we can do whatever\n//   // else we needed to in the loader and return the data. (This is boring, we're\n//   // just gonna return the params.id).\n//   return { param: params.userId };\n// };\n\n// export default function ParamDemo() {\n//   const initialState = {\n//     tags: [],\n//   };\n\n//   // Create a reducer that will update the tags array\n//   function reducer(state: any, message: any) {\n//     return {\n//       tags: [message, ...state.tags],\n//     };\n//   }\n//     const [state, dispatch, Provider] = createCtxWithReducer(\n//       reducer,\n//       initialState\n//     );\n\n//     // when the app loads, fetch the current messages and load them into the state\n//     // this also subscribes to new data as it changes and updates the local state\n//     useEffect(() => {\n//       tags.map().once((m: any) => {\n//         dispatch({\n//           name: m.name,\n//           createdAt: m.createdAt,\n//           creator: m.creator,\n//           url: m.url,\n//         });\n//       });\n//     }, []);\n//   let data = useLoaderData();\n//   return (\n//        <div>      \n//       <aside>\n//         <div className=\"border-l-2 mt-10\">\n//           {/* <ul>\n//             {state.tags.map((tag: any) => (\n//               <li key={tag.createdAt} className=\"remix__page__resource\">\n//                 <div className=\"transform transition cursor-pointer hover:-translate-y-2 ml-10 relative flex items-center px-6 py-4 bg-blue-600 text-white rounded mb-10 flex-col md:flex-row space-y-4 md:space-y-0\">\n//                   <div className=\"absolute -left-10 transform -translate-x-2/4 rounded-full z-10 mt-2 md:mt-0\">\n//                     <IconButton />\n//                   </div>\n//                   <div className=\"w-10 h-1 bg-blue-300 absolute -left-10 z-0\"></div>\n//                   <div className=\"flex-auto\">\n//                     <h1 className=\"text-lg\">{tag.name}</h1>\n//                     <h1 className=\"text-xl font-bold\">{tag.url}</h1>\n//                     <h3>{tag.creator}</h3>\n//                     <h3>{tag.createdAt}</h3>\n//                   </div>\n//                 </div>\n//               </li>\n//             ))}\n//           </ul> */}\n//           <p>{data.param.userId}</p>\n//         </div>\n//       </aside>\n//     </div>\n//   );\n// } \n\n// // https://remix.run/api/conventions#catchboundary\n// // https://remix.run/api/remix#usecatch\n// // https://remix.run/api/guides/not-found\n// export function CatchBoundary() {\n//   let caught = useCatch();\n\n//   let message: React.ReactNode;\n//   switch (caught.status) {\n//     case 401:\n//       message = (\n//         <p>\n//           Looks like you tried to visit a page that you do not have access to.\n//           Maybe ask the webmaster ({caught.data.webmasterEmail}) for access.\n//         </p>\n//       );\n//     case 404:\n//       message = (\n//         <p>Looks like you tried to visit a page that does not exist.</p>\n//       );\n//     default:\n//       message = (\n//         <p>\n//           There was a problem with your request!\n//           <br />\n//           {caught.status} {caught.statusText}\n//         </p>\n//       );\n//   }\n\n//   return (\n//     <>\n//       <h2>Oops!</h2>\n//       <p>{message}</p>\n//       <p>\n//         (Isn't it cool that the user gets to stay in context and try a different\n//         link in the parts of the UI that didn't blow up?)\n//       </p>\n//     </>\n//   );\n// }\n\n// // https://remix.run/api/conventions#errorboundary\n// // https://remix.run/api/guides/not-found\n// export function ErrorBoundary({ error }: { error: Error }) {\n//   console.error(error);\n//   return (\n//     <>\n//       <h2>Error!</h2>\n//       <p>{error.message}</p>\n//       <p>\n//         (Isn't it cool that the user gets to stay in context and try a different\n//         link in the parts of the UI that didn't blow up?)\n//       </p>\n//     </>\n//   );\n// }\n\n// export let meta: MetaFunction = ({ data }) => {\n//   return {\n//     title: data ? `Param: ${data.param}` : 'Oops...',\n//   };\n// };\n", "// import {\n//   json,\n//   Link,\n//   Form,\n//   useLoaderData,\n//   LoaderFunction,\n//   MetaFunction,\n//   ActionFunction,\n//   redirect,\n// } from 'remix';\n// import { createCtxWithReducer, tags, useGun } from '~/utils/db/gun';\n// import { today } from '~/utils/dates';\n// import invariant from 'tiny-invariant';\n// import Gun from 'gun';\n// import { useReducer, useEffect, useState } from 'react';\n// import { IGunConstructorOptions } from 'gun/types/options';\n\n// // const SEA = Gun.SEA;\n// const gunOpts: IGunConstructorOptions = {\n//   peers: ['http://0.0.0.0:3000/gun'],\n//   radisk: true,\n//   localStorage: false,\n// };\n\n\n\n// // https://remix.run/api/conventions#meta\n// export let meta: MetaFunction = () => {\n//   return {\n//     title: 'CNXT Dynamic Namespaces',\n//     description: 'hastags',\n//   };\n// };\n\n// export function IconButton() {\n//   return (\n//     <button\n//       id=\"instagram\"\n//       className=\"  hover:border-2 border-pink-500 bg-gradient-to-b text-2xl hover:from-indigo-600 hover:via-pink-600 hover:to-yellow-500 hover:text-white bg-white text-pink-600 w-12 h-12  transform hover:-translate-y-3 rounded-full duration-500\"\n//     >\n//       <i className=\"fas fa-hashtag \"></i>\n//     </button>\n//   );\n// }\n\n// export let action: ActionFunction = async ({ request }) => {\n  \n//   let form = await request.formData();\n//   const tag = {\n//     name: form.get('name'),\n//     createdAt: Date.now(),\n//     creator: form.get('creator'),\n//     url: form.get('url'),\n//   };\n\n//   tags.set(tag);\n//   return redirect('/');\n// };\n\n// export default function TimeLine() {\n//   // the form state manages the form input for creating a new message\n//   const [formState, setForm] = useState({\n//     name: '',\n//     message: '',\n//   });\n\n//   // initialize the reducer & state for holding the messages array\n//   const [state, dispatch, Provider] = createCtxWithReducer(reducer, initialState);\n\n//   // when the app loads, fetch the current messages and load them into the state\n//   // this also subscribes to new data as it changes and updates the local state\n//   useEffect(() => {\n//     tags.map().once((m: any) => {\n//       json({\n//         name: m.name,\n//         createdAt: m.createdAt,\n//         creator: m.creator,\n//         url: m.url,\n//       });\n//     });\n//   }, []);\n\n//   // set a new message in gun, update the local state to reset the form field\n//   function saveMessage() {\n//     tags.set({\n//       name: formState.name,\n//       message: formState.message,\n//       createdAt: Date.now(),\n//     });\n//     setForm({\n//       name: '',\n//       message: '',\n//     });\n//   }\n\n//   // update the form state as the user types\n//   function onChange(e: any) {\n//     setForm({ ...formState, [e.target.name]: e.target.value });\n//   }\n\n//   return (\n//     <div>\n//       <main>\n//         <div className=\"bg-gray-900 w-3/4 shadow justify-items-center rounded p-8 sm:p-12 m-12\">\n//           <h1 className=\"text-3xl font-bold leading-7 text-center text-blue-500 \">\n//             Add your tag to mint your metric token\n//           </h1>\n//           <Form method=\"post\">\n//             <div>\n//               <input\n//                 onChange={onChange}\n//                 className=\"bg-gray-100 m-5 bg-opacity-20 placeholder-gray-400 text-gray-400 text-sm py-1 px-5 rounded-md outline-none w-3/4 focus:outline-none focus:ring\"\n//                 type=\"text\"\n//                 placeholder=\"Tag Name\"\n//                 name=\"name\"\n//               />\n//             </div>\n//             <div>\n//               <input\n//                 onChange={onChange}\n//                 className=\"bg-gray-100 m-5 bg-opacity-20  placeholder-gray-400 text-gray-400 text-sm py-1 px-5 rounded-md outline-none w-3/4 focus:outline-none focus:ring\"\n//                 type=\"text\"\n//                 placeholder=\"Creator\"\n//                 name=\"creator\"\n//               />\n//             </div>\n//             <div>\n//               <input\n//                 onChange={onChange}\n//                 className=\"bg-gray-100 m-5 bg-opacity-20 placeholder-gray-400 text-gray-400 text-sm py-1 px-5 rounded-md outline-none w-3/4 focus:outline-none focus:ring\"\n//                 type=\"url\"\n//                 placeholder=\"https://\"\n//                 name=\"url\"\n//               />\n//             </div>\n//             {/* <div>\n//               <textarea\n//                 placeholder=\"Other MetaData:\"\n//                 className=\"bg-gray-100 m-5 bg-opacity-20 h-60 placeholder-gray-400 text-gray-400 text-sm py-1 px-5 rounded-md outline-none w-3/4 focus:outline-none focus:ring\"\n//                 name=\"meta\"\n//               />\n//             </div> */}\n//             <div>\n//               <div className=\"p-1 rounded-full text-gray-500\">\n//                 <button\n//                   onClick={saveMessage}\n//                   className=\"flex flex-row justify-center items-center p-2 rounded-md focus:ring-2 hover:bg-red-500 hover:bg-opacity-90 focus:outline-none\"\n//                   aria-label=\"Submit\"\n//                 >\n//                   <svg className=\"fill-current h-4 w-4\" viewBox=\"0 0 25 25\">\n//                     <path d=\"M11 11v-11h1v11h11v1h-11v11h-1v-11h-11v-1h11z\" />\n//                   </svg>\n//                   <p className=\"px-3\">Submit</p>\n//                 </button>\n//               </div>\n//             </div>\n//           </Form>\n//         </div>\n//       </main>\n//       <aside>\n//         <div className=\"border-l-2 mt-10\">\n//           <ul>\n\n//           </ul>\n//         </div>\n//       </aside>\n//     </div>\n//   );\n// }\n", "\nimport * as entryServer from \"/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/entry.server.tsx\";\nimport * as route0 from \"/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/root.tsx\";\nimport * as route1 from \"/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/tags/tag/$hash.tsx\";\nimport * as route2 from \"/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/posts/updates.md\";\nimport * as route3 from \"/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/tags/$userId.tsx\";\nimport * as route4 from \"/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/posts/$slug.tsx\";\nimport * as route5 from \"/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/tags/mint.tsx\";\nimport * as route6 from \"/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/index.tsx\";\nimport * as route7 from \"/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/login.tsx\";\nimport * as route8 from \"/Volumes/\u03B2\u03C4\u03B5s\u03B7\u0398\u03C9./Projects/CNXT/cnxt/app/routes/start.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/tags/tag/$hash\": {\n    id: \"routes/tags/tag/$hash\",\n    parentId: \"root\",\n    path: \"tags/tag/:hash\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/posts/updates\": {\n    id: \"routes/posts/updates\",\n    parentId: \"root\",\n    path: \"posts/updates\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/tags/$userId\": {\n    id: \"routes/tags/$userId\",\n    parentId: \"root\",\n    path: \"tags/:userId\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route3\n  },\n  \"routes/posts/$slug\": {\n    id: \"routes/posts/$slug\",\n    parentId: \"root\",\n    path: \"posts/:slug\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route4\n  },\n  \"routes/tags/mint\": {\n    id: \"routes/tags/mint\",\n    parentId: \"root\",\n    path: \"tags/mint\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route5\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route6\n  },\n  \"routes/login\": {\n    id: \"routes/login\",\n    parentId: \"root\",\n    path: \"login\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route7\n  },\n  \"routes/start\": {\n    id: \"routes/start\",\n    parentId: \"root\",\n    path: \"start\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route8\n  }\n};", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  });\n}\n", "import * as React from 'react';\nimport {\n  Link,\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLocation,\n} from 'remix';\nimport type { LinksFunction } from 'remix';\nimport styles from './tailwind.css';\nimport deleteMeRemixStyles from '~/styles/demos/remix.css';\nimport globalStylesUrl from '~/styles/global.css';\nimport darkStylesUrl from '~/styles/dark.css';\nimport tagStyles from '~/styles/cnxt/tags.css';\nimport AppProvider from './utils/contexts/gun/gun.provider'\n\n/**\n * The `links` export is a function that returns an array of objects that map to\n * the attributes for an HTML `<link>` element. These will load `<link>` tags on\n * every route in the app, but individual routes can include their own links\n * that are automatically unloaded when a user navigates away from the route.\n *\n * https://remix.run/api/app#links\n */\nexport let links: LinksFunction = () => {\n  return [\n    { rel: 'stylesheet', href: globalStylesUrl },\n    { rel: 'stylesheet', href: tagStyles },\n    {\n      rel: 'stylesheet',\n      href: darkStylesUrl,\n      media: '(prefers-color-scheme: dark)',\n    },\n    { rel: 'stylesheet', href: deleteMeRemixStyles },\n    { rel: 'stylesheet', href: styles },\n    {\n      rel: 'stylesheet',\n      href: 'https://use.fontawesome.com/releases/v5.15.4/css/all.css',\n    },\n  ];\n};\n\n/**\n * The root module's default export is a component that renders the current\n * route via the `<Outlet />` component. Think of this as the global layout\n * component for your app.\n */\nexport default function App() {\n  return (\n    <AppProvider>\n      <Document>\n        <Layout>\n          <Outlet />\n        </Layout>\n      </Document>\n    </AppProvider>\n  );\n}\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {children}\n        <RouteChangeAnnouncement />\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === 'development' && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n\nfunction Layout({ children }: React.PropsWithChildren<{}>) {\n  return (\n    <div className=\"remix-app\">\n      <header className=\"remix-app__header\">\n        <div className=\"container remix-app__header-content\">\n          <Link to=\"/\" title=\"Remix\" className=\"remix-app__header-home-link\">\n            <Logo />\n          </Link>\n          <nav aria-label=\"Main navigation\" className=\"remix-app__header-nav\">\n            {/* <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/mint\">Metric\u274CTags</Link>\n              </li>\n            </ul> */}\n          </nav>\n        </div>\n      </header>\n      <div className=\"remix-app__main\">\n        <div className=\"container remix-app__main-content\">{children}</div>\n      </div>\n      <footer className=\"remix-app__footer\">\n        <div className=\"container remix-app__footer-content\">\n          <p className=\"font-medium\">&copy; CN\u274CT | THE\u274CDESK</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </p>\n      );\n      break;\n    case 404:\n      message = (\n        <p>Oops! Looks like you tried to visit a page that does not exist.</p>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <Layout>\n        <h1>\n          {caught.status}: {caught.statusText}\n        </h1>\n        {message}\n      </Layout>\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <Document title=\"Error!\">\n      <Layout>\n        <div>\n          <h1>There was an error</h1>\n          <p>{error.message}</p>\n          <hr />\n          <p>TODO: FIX BUG IN CODE</p>\n        </div>\n      </Layout>\n    </Document>\n  );\n}\n\nfunction Logo(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg\n      viewBox=\"0 0 1061 253\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      aria-labelledby=\"remix-run-logo-title\"\n      role=\"img\"\n      width=\"106\"\n      height=\"30\"\n      fill=\"currentColor\"\n      {...props}\n    >\n      <g transform=\"matrix(1,0,0,1,-249,-135)\">\n        <g transform=\"matrix(1,0,0,1,-88,-816)\">\n          <g transform=\"matrix(4.53085,0,0,4.53085,337.554,376.39)\">\n            <g transform=\"matrix(0.149307,0,0,0.149307,-653.047,-29.1861)\">\n              <path\n                fill=\"rgb(52,151,250)\"\n                d=\"M5940.91,1047.05L5940.91,1048.26L5856.67,1125.74L5823.39,1125.74L5856.67,1125.74L5832.17,1148.26L5815.53,1148.26L5810,1142.25L5815.53,1148.26L5723.87,1148.26L5723.87,1417.65L5569.22,1417.65L5569.22,1395.12L5583.51,1395.12L5583.51,1148.26L5478.51,1148.26L5478.51,1126.03L5531.65,1126.03C5546.35,1112.59 5562.41,1100.8 5579.32,1090.23C5595.83,1079.9 5602.32,1061.15 5617.05,1049.62L5621.75,1049.62L5621.75,1047.05L5940.91,1047.05ZM5605.74,1392.05C5608.25,1393.17 5611.11,1394.2 5614.25,1395.12L5605.74,1395.12L5605.74,1392.05ZM5701.63,1394.61L5701.63,1395.12L5700.41,1395.12C5700.82,1394.95 5701.23,1394.78 5701.63,1394.61ZM5826.96,1145.08C5827.54,1145.08 5828.12,1145.09 5828.69,1145.09L5828.57,1145.09C5828.03,1145.09 5827.5,1145.08 5826.96,1145.08ZM5830.39,1145.07L5830.23,1145.07L5830.39,1145.07ZM5831.15,1145.04L5831.12,1145.05L5831.15,1145.04L5831.21,1145.04L5831.15,1145.04ZM5831.39,1145.03L5831.34,1145.04L5831.39,1145.03ZM5831.64,1145.02L5831.58,1145.02L5831.52,1145.03C5831.56,1145.03 5831.6,1145.02 5831.64,1145.02ZM5822.99,1144.99L5823.12,1144.99L5822.99,1144.99ZM5821.14,1144.97L5821.49,1144.97L5821.14,1144.97ZM5820.68,1144.97L5820.89,1144.97L5820.68,1144.97ZM5832.67,1144.95C5832.62,1144.96 5832.58,1144.96 5832.53,1144.96C5832.6,1144.96 5832.66,1144.95 5832.73,1144.95L5832.67,1144.95ZM5833.53,1144.88C5833.34,1144.9 5833.15,1144.91 5832.96,1144.93C5833.15,1144.91 5833.34,1144.9 5833.53,1144.88ZM5834,1144.83L5833.97,1144.83C5834,1144.83 5834.03,1144.82 5834.06,1144.82L5834,1144.83ZM5834.24,1144.8L5834.18,1144.8L5834.12,1144.81L5834.18,1144.8L5834.24,1144.8ZM5834.36,1144.78L5834.42,1144.77C5834.4,1144.78 5834.38,1144.78 5834.36,1144.78L5834.3,1144.79C5834.32,1144.79 5834.34,1144.78 5834.36,1144.78ZM5835.19,1144.66L5835.14,1144.67L5835.19,1144.66L5835.25,1144.65L5835.19,1144.66Z\"\n              />\n            </g>\n            <g transform=\"matrix(0.149307,0,0,0.149307,-653.047,-29.1861)\">\n              <path\n                fill=\"rgb(255,255,255)\"\n                d=\"M5047.86,1253.48L4821.11,1044.95L4820.49,1045.62L4820.49,1044.95L4643.86,1044.95L4643.86,1045.16C4606.52,1045.92 4569.31,1048.83 4532.4,1055.36C4437.34,1072.17 4379.47,1135.86 4374.11,1220.85C4369.3,1297.17 4433.24,1397.97 4545.32,1410.93C4592.41,1416.37 4639.6,1416.87 4686.82,1416.42L4822.81,1416.42L4824.26,1416.65L4823.57,1416.42L4834.4,1416.42L4834.4,1416.05L4835.17,1416.05L4835.17,1224.73L5043.86,1416.65L5043.86,1417.36L5157.49,1417.36L5157.49,1395.12L5087.07,1395.12C5091.98,1389.89 5097.27,1385.07 5102.77,1380.48L5161.49,1380.48L5161.49,1047.05L5047.86,1047.05L5047.86,1253.48ZM4710.22,1319C4708.3,1319.43 4706.05,1319.56 4703.45,1319.42C4700.06,1319.23 4696.66,1319.1 4693.26,1319L4661.75,1319C4639.77,1319.41 4617.76,1320.28 4595.79,1319L4574.86,1319L4574.86,1318.9C4528.12,1316.64 4490.86,1277.98 4490.86,1230.68C4490.86,1183.39 4528.12,1144.73 4574.86,1142.47L4574.86,1142.37L4724.82,1142.37L4724.82,1319L4710.22,1319Z\"\n              />\n            </g>\n            <g transform=\"matrix(0.220709,0,0,0.220709,-55.0788,97.0259)\">\n              <path\n                fill=\"rgb(202,37,37)\"\n                d=\"M982.147,136.535L982.147,136.467L1106.12,136.467L1091.24,150.09L1091.12,150.091L969.733,261.725L1093.74,375.763L1093.7,375.805L1106.12,387.176L982.147,387.177L982.147,386.911L982.082,386.981L907.807,318.674L833.539,386.973L833.539,387.177L709.564,387.176L721.951,375.84L721.88,375.763L845.882,261.726L724.492,150.09L724.448,150.09L709.564,136.467L833.539,136.467L833.539,136.476L907.808,204.777L982.086,136.468L982.147,136.535Z\"\n              />\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\n/**\n * Provides an alert for screen reader users when the route changes.\n */\nconst RouteChangeAnnouncement = React.memo(() => {\n  let [hydrated, setHydrated] = React.useState(false);\n  let [innerHtml, setInnerHtml] = React.useState('');\n  let location = useLocation();\n\n  React.useEffect(() => {\n    setHydrated(true);\n  }, []);\n\n  let firstRenderRef = React.useRef(true);\n  React.useEffect(() => {\n    // Skip the first render because we don't want an announcement on the\n    // initial page load.\n    if (firstRenderRef.current) {\n      firstRenderRef.current = false;\n      return;\n    }\n\n    let pageTitle = location.pathname === '/' ? 'Home' : document.title;\n    setInnerHtml(`Navigated to ${pageTitle}`);\n  }, [location.pathname]);\n\n  // Render nothing on the server. The live region provides no value unless\n  // scripts are loaded and the browser takes over normal routing.\n  if (!hydrated) {\n    return null;\n  }\n\n  return (\n    <div\n      aria-live=\"assertive\"\n      aria-atomic\n      id=\"route-change-region\"\n      style={{\n        border: '0',\n        clipPath: 'inset(100%)',\n        clip: 'rect(0 0 0 0)',\n        height: '1px',\n        margin: '-1px',\n        overflow: 'hidden',\n        padding: '0',\n        position: 'absolute',\n        width: '1px',\n        whiteSpace: 'nowrap',\n        wordWrap: 'normal',\n      }}\n    >\n      {innerHtml}\n    </div>\n  );\n});\n", "import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Gun from 'gun';\nimport 'gun/lib/radix';\nimport 'gun/lib/radisk';\nimport 'gun/lib/store';\nimport 'gun/lib/rindexed';\nimport { GunProvider } from '@altrx/gundb-react-auth';\n\nconst sea = Gun.SEA\n\nconst asyncFn =\n  (fn:any) =>\n  (...args:any) => {\n    return new Promise((resolve) => {\n      resolve(fn.call(this, ...args));\n    });\n  };\n\nconst storage = {\n  setItem: asyncFn(localStorage.setItem.bind(localStorage)),\n  getItem: asyncFn(localStorage.getItem.bind(localStorage)),\n  removeItem: asyncFn(localStorage.removeItem.bind(localStorage)),\n};\n\nconst peers = ['http://0.0.0.0:3000/gun'];\n\nconst AppProvider = ({ children }: React.PropsWithChildren<{}>) => {\n  return (\n    <GunProvider\n      peers={peers}\n      sea={sea}\n      Gun={Gun}\n      keyFieldName=\"app/keys\"\n      storage={storage}\n      gunOpts={{\n        localStorage: false,\n        radisk: true,\n        peers,\n      }}\n    >\n      {children}\n    </GunProvider>\n  );\n};\n\nexport default AppProvider", "\n/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport React from \"react\";\nfunction MDXContent(props = {}) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\"\n  }, props.components), {wrapper: MDXLayout} = _components;\n  const _content = <><_components.h1>{\"Chris\"}</_components.h1>{\"\\n\"}<_components.p>{\"Okay bubba it's time for a little assesment overview. It's been less than a month and we have made quite a bit of progress in my opinion. There was a recent 3-4 day period after thanksgiving where i hit a block, and a wall at the same time but there has been recent strides as of yesterday.\"}</_components.p>{\"\\n\"}<_components.p>{\"The tags are writing to the database and I have found the perfect app framework that allows us to manipulate the server as flexible as we need it to. It's called Remix.run and I dont think I'll be using another framework in a while.\"}</_components.p>{\"\\n\"}<_components.p>{\"Now that all the storage reads/writes are happening. We will have a working mvp by the end of next week if the skies stay blue. Tomorrow im gonna start loading actual tag data for searching and categorizing.\"}</_components.p>{\"\\n\"}<_components.p>{\"If you didn't send me any coin recently we're looking at 80 hours flat (4k) since the last payment. There was some hours of research and redos that i dont feel comfy billing you for.\"}</_components.p></>;\n  return MDXLayout ? <MDXLayout {...props}>{_content}</MDXLayout> : _content;\n}\nexport default MDXContent;\n\n\nexport const filename = \"updates.md\";\nexport const headers = typeof attributes !== \"undefined\" && attributes.headers;\nexport const meta = typeof attributes !== \"undefined\" && attributes.meta;\nexport const links = undefined;\n          ", "import { useLoaderData } from 'remix';\nimport type { LoaderFunction } from 'remix';\nimport { getPost } from '~/post';\nimport invariant from 'tiny-invariant';\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.slug, 'expected params.slug');\n  return getPost(params.slug);\n};\n\nexport default function PostSlug() {\n  const post = useLoaderData();\n  return (\n    <div className=\"text-center text-md\">\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n    </div>\n  );\n}\n", "import path from \"path\";\nimport fs from \"fs/promises\";\nimport parseFrontMatter from \"front-matter\";\nimport invariant from \"tiny-invariant\";\nimport { marked } from \"marked\";\n\nexport type Post = {\n    slug: string;\n    title: string;\n};\n\nexport type PostMarkdownAttributes = {\n    title: string;\n};\n\nconst postsPath = path.join(__dirname, \"..\", \"posts\");\n\nfunction isValidPostAttributes(\n    attributes: any\n): attributes is PostMarkdownAttributes {\n    return attributes?.title;\n}\n\nexport async function getPosts() {\n    const dir = await fs.readdir(postsPath);\n    return Promise.all(\n        dir.map(async filename => {\n            const file = await fs.readFile(\n                path.join(postsPath, filename)\n            );\n            const { attributes } = parseFrontMatter(\n                file.toString()\n            );\n            invariant(\n                isValidPostAttributes(attributes),\n                `${filename} has bad meta data!`\n            );\n            return {\n                slug: filename.replace(/\\.md$/, \"\"),\n                title: attributes.title\n            };\n        })\n    );\n}\n\nexport async function getPost(slug: string) {\n    const filepath = path.join(postsPath, slug + \".md\");\n    const file = await fs.readFile(filepath);\n    const { attributes, body } = parseFrontMatter(\n        file.toString()\n    );\n    invariant(\n        isValidPostAttributes(attributes),\n        `Post ${filepath} is missing attributes`\n    );\n    const html = marked(body);\n    console.log(html)\n    return { slug, html, title: attributes.title };\n}", "import type { MetaFunction, LoaderFunction } from 'remix';\nimport { useLoaderData, json, Link } from 'remix';\n\ntype IndexData = {\n  resources: Array<{ name: string; url: string }>;\n  demos: Array<{ name: string; to: string }>;\n};\n\n// Loaders provide data to components and are only ever called on the server, so\n// you can connect to a database or run any server side code you want right next\n// to the component that renders it.\n// https://remix.run/api/conventions#loader\nexport let loader: LoaderFunction = () => {\n  let data: IndexData = {\n    resources: [\n      {\n        name: 'Remix Docs',\n        url: 'https://docs.remix.run',\n      },\n      {\n        name: 'React Router Docs',\n        url: 'reactrouter.com/docs',\n      },\n      {\n        name: 'Remix Discord',\n        url: 'https://discord.gg/VBePs6d',\n      },\n    ],\n    demos: [\n      {\n        to: 'demos/actions',\n        name: 'Actions',\n      },\n      {\n        to: 'demos/about',\n        name: 'Nested Routes, CSS loading/unloading',\n      },\n      {\n        to: 'demos/params',\n        name: 'URL Params and Error Boundaries',\n      },\n    ],\n  };\n\n  // https://remix.run/api/remix#json\n  return json(data);\n};\n\n// https://remix.run/api/conventions#meta\nexport let meta: MetaFunction = () => {\n  return {\n    title: 'Remix Starter',\n    description: 'Welcome to remix!',\n  };\n};\n\n// https://remix.run/guides/routing#index-routes\nexport default function Index() {\n  let data = useLoaderData<IndexData>();\n\n  return (\n    <div className=\"remix__page\">\n      <main>\n        <h2>Welcome to Remix!</h2>\n        <p>We're stoked that you're here. \uD83E\uDD73</p>\n        <p>\n          Feel free to take a look around the code to see how Remix does things,\n          it might be a bit different than what you\u2019re used to. When you're\n          ready to dive deeper, we've got plenty of resources to get you\n          up-and-running quickly.\n        </p>\n        <p>\n          Check out all the demos in this starter, and then just delete the{' '}\n          <code>app/routes/demos</code> and <code>app/styles/demos</code>{' '}\n          folders when you're ready to turn this into your next project.\n        </p>\n      </main>\n      <aside>\n        <h2>Demos In This App</h2>\n        <ul>\n          {data.demos.map((demo) => (\n            <li key={demo.to} className=\"remix__page__resource\">\n              <Link to={demo.to} prefetch=\"intent\">\n                {demo.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n        <h2>Resources</h2>\n        <ul>\n          {data.resources.map((resource) => (\n            <li key={resource.url} className=\"remix__page__resource\">\n              <a href={resource.url}>{resource.name}</a>\n            </li>\n          ))}\n        </ul>\n      </aside>\n    </div>\n  );\n}\n", "import {\n  useTransition,\n  useActionData,\n  Form,\n  redirect,\n  Link,\n  json,\n  LoaderFunction,\n} from 'remix';\nimport type { ActionFunction } from 'remix';\nimport invariant from 'tiny-invariant';\nimport { IGunConstructorOptions } from 'gun/types/options';\nimport { useAuth } from '@altrx/gundb-react-auth';\n\n\nexport let action: ActionFunction = async ({ request }) => {\n  let formData = await request.formData();\n  let username = formData.get('user');\n  let password = formData.get('password');\n\n  let errors: Record<string, boolean> = {};\n  if (!username) errors.user = true;\n  if (!password) errors.passwd = true;\n\n  if (Object.keys(errors).length) {\n    return errors;\n  }\n\n  return redirect('tags/mint');\n};\n\nexport default function LoginView() {\n    let errors = useActionData();\n  let transition = useTransition();\n  const { login } = useAuth();\n  async function getApp(type: string, value?: string | undefined) {\n    try {\n      let keys;\n\n      if (type !== 'new') {\n        if (typeof value === 'string') {\n          keys = JSON.parse(value);\n        } else {\n          keys = value;\n        }\n      }\n      login(keys);\n    } catch (e) {}\n  }\n\n  return (\n    <div\n      className=\"bg-gray-900 w-3/4 shadow justify-items-center rounded p-8 sm:p-12 m-12\"\n      id=\"splash\"\n    >\n              <p>\n          <label>\n           \n      <button\n        className=\"new-list\"\n        onClick={(e) => {\n          getApp('new');\n        }}\n      >\n        New user\n      </button>\n      </label>\n      </p>\n      <h2>Already have one?</h2>\n      <input\n        type=\"password\"\n        className=\"bg-gray-100 m-5 bg-opacity-20 placeholder-gray-400 text-gray-400 text-sm py-1 px-5 rounded-md outline-none w-3/4 focus:outline-none focus:ring\"\n        placeholder=\"Paste keys here\"\n        name=\"password\"\n        onChange={(e) => {\n          const { target } = e;\n          getApp('existing', target.value);\n        }}\n      />\n    </div>\n  );\n}\n\n// import { addUser, gun } from '~/utils/db/gun';\n\n// const SEA = Gun.SEA;\n// const gunOpts: IGunConstructorOptions = {\n//   peers: ['http://0.0.0.0:3000/gun'],\n// };\n// const gun = Gun(gunOpts);\n// const user = gun.user().recall({ sessionStorage: true });\n\n// export default function LoginView() {\n\n//   return (\n//     <div >\n//       <h1 className=\"text-3xl font-bold leading-7 text-center text-blue-500 \">\n//         Credentials\n//       </h1>\n//       <Form method=\"post\">\n\n//             <input\n//               type=\"text\"\n//               className=\"bg-gray-100 m-5 bg-opacity-20 placeholder-gray-400 text-gray-400 text-sm py-1 px-5 rounded-md outline-none w-3/4 focus:outline-none focus:ring\"\n//               placeholder=\"Username\"\n//               name=\"user\"\n//             />\n//           </label>\n//         </p>\n//         <p>\n//           <label>\n//             Password {errors?.passwd && <em>Password Required</em>}\n//             <input\n//               type=\"password\"\n//               className=\"bg-gray-100 m-5 bg-opacity-20 placeholder-gray-400 text-gray-400 text-sm py-1 px-5 rounded-md outline-none w-3/4 focus:outline-none focus:ring\"\n//               placeholder=\"Password\"\n//               name=\"password\"\n//             />\n//           </label>\n//         </p>\n//         <button\n//           className=\"flex flex-row justify-center items-center p-2 rounded-md focus:ring-2 hover:bg-red-500 hover:bg-opacity-90 focus:outline-none\"\n//           type=\"submit\"\n//         >\n          \n//         </button>\n//       </Form>\n//     </div>\n//   );\n// }\n", "import { useCatch, Link, json, useLoaderData, Outlet } from 'remix';\nimport type { LoaderFunction } from 'remix';\n\nexport default function Boundaries() {\n  return (\n    <>\n      <h2>Params</h2>\n      <Link to='/login'>\n          <h1>Login</h1>\n      </Link>\n      <p>\n        When you name a route segment with $ like{' '}\n        <code>routes/users/$userId.js</code>, the $ segment will be parsed from\n        the URL and sent to your loaders and actions by the same name.\n      </p>\n      <h2>Errors</h2>\n      <p>\n        When a route throws an error in it's action, loader, or component, Remix\n        automatically catches it, won't even try to render the component, but it\n        will render the route's ErrorBoundary instead. If the route doesn't have\n        one, it will bubble up to the routes above it until it hits the root.\n      </p>\n      <p>So be as granular as you want with your error handling.</p>\n      <h2>Not Found</h2>\n      <p>\n        (and other{' '}\n        <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses\">\n          client errors\n        </a>\n        )\n      </p>\n      <p>\n        Loaders and Actions can throw a <code>Response</code> instead of an\n        error and Remix will render the CatchBoundary instead of the component.\n        This is great when loading data from a database isn't found. As soon as\n        you know you can't render the component normally, throw a 404 response\n        and send your app into the catch boundary. Just like error boundaries,\n        catch boundaries bubble, too.\n      </p>\n    </>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,YAAuB;AAAA;AAAA;;;ACAvB;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAC/B,mBAA4B;AAGb,uBACb,SACA,oBACA,iBACA,cACA;AACA,MAAI,SAAS,kCACX,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAGnD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AClBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAuB;AACvB,oBAUO;;;;;;;;;;;;;;;;;;ACXP;AAAA,mBAAkB;AAElB,iBAAgB;AAChB,mBAAO;AACP,oBAAO;AACP,mBAAO;AACP,sBAAO;AACP,8BAA4B;AAE5B,IAAM,MAAM,mBAAI;AAEhB,IAAM,UACJ,CAAC,OACD,IAAI,SAAa;AACf,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,YAAQ,GAAG,KAAK,QAAM,GAAG;AAAA;AAAA;AAI/B,IAAM,UAAU;AAAA,EACd,SAAS,QAAQ,aAAa,QAAQ,KAAK;AAAA,EAC3C,SAAS,QAAQ,aAAa,QAAQ,KAAK;AAAA,EAC3C,YAAY,QAAQ,aAAa,WAAW,KAAK;AAAA;AAGnD,IAAM,QAAQ,CAAC;AAEf,IAAM,cAAc,CAAC,EAAE,eAA4C;AACjE,SACE,mDAAC,qCAAD;AAAA,IACE;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL,cAAa;AAAA,IACb;AAAA,IACA,SAAS;AAAA,MACP,cAAc;AAAA,MACd,QAAQ;AAAA,MACR;AAAA;AAAA,KAGD;AAAA;AAKP,IAAO,uBAAQ;;;ADlBR,IAAI,QAAuB,MAAM;AACtC,SAAO;AAAA,IACL,EAAE,KAAK,cAAc,MAAM;AAAA,IAC3B,EAAE,KAAK,cAAc,MAAM;AAAA,IAC3B;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA;AAAA,IAET,EAAE,KAAK,cAAc,MAAM;AAAA,IAC3B,EAAE,KAAK,cAAc,MAAM;AAAA,IAC3B;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;AAUG,eAAe;AAC5B,SACE,qCAAC,sBAAD,MACE,qCAAC,UAAD,MACE,qCAAC,QAAD,MACE,qCAAC,sBAAD;AAAA;AAOV,kBAAkB;AAAA,EAChB;AAAA,EACA;AAAA,GAIC;AACD,SACE,qCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,qCAAC,QAAD,MACE,qCAAC,QAAD;AAAA,IAAM,SAAQ;AAAA,MACd,qCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,IAAW,SAAQ;AAAA,MAC7B,QAAQ,qCAAC,SAAD,MAAQ,SAAiB,MAClC,qCAAC,oBAAD,OACA,qCAAC,qBAAD,QAEF,qCAAC,QAAD,MACG,UACD,qCAAC,yBAAD,OACA,qCAAC,iCAAD,OACA,qCAAC,uBAAD,OACC,QAAQ,IAAI,aAAa,iBAAiB,qCAAC,0BAAD;AAAA;AAMnD,gBAAgB,EAAE,YAAyC;AACzD,SACE,qCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KAChB,qCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,IAAI,OAAM;AAAA,IAAQ,WAAU;AAAA,KACnC,qCAAC,MAAD,QAEF,qCAAC,OAAD;AAAA,IAAK,cAAW;AAAA,IAAkB,WAAU;AAAA,QAYhD,qCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAqC,YAEtD,qCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KAChB,qCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAc;AAAA;AAO9B,yBAAyB;AAC9B,MAAI,SAAS;AAEb,MAAI;AACJ,UAAQ,OAAO;AAAA,SACR;AACH,gBACE,qCAAC,KAAD,MAAG;AAKL;AAAA,SACG;AACH,gBACE,qCAAC,KAAD,MAAG;AAEL;AAAA;AAGA,YAAM,IAAI,MAAM,OAAO,QAAQ,OAAO;AAAA;AAG1C,SACE,qCAAC,UAAD;AAAA,IAAU,OAAO,GAAG,OAAO,UAAU,OAAO;AAAA,KAC1C,qCAAC,QAAD,MACE,qCAAC,MAAD,MACG,OAAO,QAAO,MAAG,OAAO,aAE1B;AAAA;AAMF,uBAAuB,EAAE,SAA2B;AACzD,UAAQ,MAAM;AACd,SACE,qCAAC,UAAD;AAAA,IAAU,OAAM;AAAA,KACd,qCAAC,QAAD,MACE,qCAAC,OAAD,MACE,qCAAC,MAAD,MAAI,uBACJ,qCAAC,KAAD,MAAI,MAAM,UACV,qCAAC,MAAD,OACA,qCAAC,KAAD,MAAG;AAAA;AAOb,cAAc,OAA8C;AAC1D,SACE,qCAAC,OAAD;AAAA,IACE,SAAQ;AAAA,IACR,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,YAAW;AAAA,IACX,mBAAgB;AAAA,IAChB,MAAK;AAAA,IACL,OAAM;AAAA,IACN,QAAO;AAAA,IACP,MAAK;AAAA,KACD,QAEJ,qCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACX,qCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACX,qCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACX,qCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACX,qCAAC,QAAD;AAAA,IACE,MAAK;AAAA,IACL,GAAE;AAAA,OAGN,qCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACX,qCAAC,QAAD;AAAA,IACE,MAAK;AAAA,IACL,GAAE;AAAA,OAGN,qCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACX,qCAAC,QAAD;AAAA,IACE,MAAK;AAAA,IACL,GAAE;AAAA;AAAA;AAalB,IAAM,0BAA0B,AAAM,YAAK,MAAM;AAC/C,MAAI,CAAC,UAAU,eAAe,AAAM,gBAAS;AAC7C,MAAI,CAAC,WAAW,gBAAgB,AAAM,gBAAS;AAC/C,MAAI,WAAW;AAEf,EAAM,iBAAU,MAAM;AACpB,gBAAY;AAAA,KACX;AAEH,MAAI,iBAAiB,AAAM,cAAO;AAClC,EAAM,iBAAU,MAAM;AAGpB,QAAI,eAAe,SAAS;AAC1B,qBAAe,UAAU;AACzB;AAAA;AAGF,QAAI,YAAY,SAAS,aAAa,MAAM,SAAS,SAAS;AAC9D,iBAAa,gBAAgB;AAAA,KAC5B,CAAC,SAAS;AAIb,MAAI,CAAC,UAAU;AACb,WAAO;AAAA;AAGT,SACE,qCAAC,OAAD;AAAA,IACE,aAAU;AAAA,IACV,eAAW;AAAA,IACX,IAAG;AAAA,IACH,OAAO;AAAA,MACL,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,SAAS;AAAA,MACT,UAAU;AAAA,MACV,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,UAAU;AAAA;AAAA,KAGX;AAAA;;;AFtQP,aAAwB;;;AIHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,oBAAkB;AAClB,oBAAoB,QAAQ,IAAI;AAC9B,QAAM,cAAc,OAAO,OAAO;AAAA,IAChC,IAAI;AAAA,IACJ,GAAG;AAAA,KACF,MAAM,aAAa,EAAC,SAAS,cAAa;AAC7C,QAAM,WAAW,0FAAE,oDAAC,YAAY,IAAb,MAAiB,UAA0B,MAAK,oDAAC,YAAY,GAAb,MAAgB,uSAAsT,MAAK,oDAAC,YAAY,GAAb,MAAgB,6OAA4P,MAAK,oDAAC,YAAY,GAAb,MAAgB,oNAAmO,MAAK,oDAAC,YAAY,GAAb,MAAgB;AACv6B,SAAO,YAAY,oDAAC,WAAD,mBAAe,QAAQ,YAAwB;AAAA;AAEpE,IAAO,kBAAQ;AAGR,IAAM,WAAW;AACjB,IAAM,UAAU,OAAO,eAAe,eAAe,WAAW;AAChE,IAAM,OAAO,OAAO,eAAe,eAAe,WAAW;AAC7D,IAAM,SAAQ;;;AJZrB,aAAwB;;;AKLxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8B;;;ACA9B;AAAA,kBAAiB;AACjB,sBAAe;AACf,0BAA6B;AAC7B,4BAAsB;AACtB,oBAAuB;AAWvB,IAAM,YAAY,oBAAK,KAAK,WAAW,MAAM;AAE7C,+BACI,aACoC;AACpC,SAAO,2CAAY;AAAA;AAyBvB,uBAA8B,MAAc;AACxC,QAAM,WAAW,oBAAK,KAAK,WAAW,OAAO;AAC7C,QAAM,OAAO,MAAM,wBAAG,SAAS;AAC/B,QAAM,EAAE,yBAAY,SAAS,iCACzB,KAAK;AAET,qCACI,sBAAsB,cACtB,QAAQ;AAEZ,QAAM,OAAO,0BAAO;AACpB,UAAQ,IAAI;AACZ,SAAO,EAAE,MAAM,MAAM,OAAO,YAAW;AAAA;;;ADtD3C,6BAAsB;AAEf,IAAM,SAAyB,OAAO,EAAE,aAAa;AAC1D,sCAAU,OAAO,MAAM;AACvB,SAAO,QAAQ,OAAO;AAAA;AAGT,oBAAoB;AACjC,QAAM,OAAO;AACb,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,yBAAyB,EAAE,QAAQ,KAAK;AAAA;AAAA;;;ALPnD,aAAwB;;;AOPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAA0C;AAWnC,IAAI,UAAyB,MAAM;AACxC,MAAI,OAAkB;AAAA,IACpB,WAAW;AAAA,MACT;AAAA,QACE,MAAM;AAAA,QACN,KAAK;AAAA;AAAA,MAEP;AAAA,QACE,MAAM;AAAA,QACN,KAAK;AAAA;AAAA,MAEP;AAAA,QACE,MAAM;AAAA,QACN,KAAK;AAAA;AAAA;AAAA,IAGT,OAAO;AAAA,MACL;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA;AAAA,MAER;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA;AAAA,MAER;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA;AAAA;AAAA;AAMZ,SAAO,wBAAK;AAAA;AAIP,IAAI,QAAqB,MAAM;AACpC,SAAO;AAAA,IACL,OAAO;AAAA,IACP,aAAa;AAAA;AAAA;AAKF,iBAAiB;AAC9B,MAAI,OAAO;AAEX,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD,MACE,oCAAC,MAAD,MAAI,sBACJ,oCAAC,KAAD,MAAG,6CACH,oCAAC,KAAD,MAAG,yOAMH,oCAAC,KAAD,MAAG,qEACiE,KAClE,oCAAC,QAAD,MAAM,qBAAuB,SAAK,oCAAC,QAAD,MAAM,qBAAwB,KAAI,oEAIxE,oCAAC,SAAD,MACE,oCAAC,MAAD,MAAI,sBACJ,oCAAC,MAAD,MACG,KAAK,MAAM,IAAI,CAAC,SACf,oCAAC,MAAD;AAAA,IAAI,KAAK,KAAK;AAAA,IAAI,WAAU;AAAA,KAC1B,oCAAC,oBAAD;AAAA,IAAM,IAAI,KAAK;AAAA,IAAI,UAAS;AAAA,KACzB,KAAK,UAKd,oCAAC,MAAD,MAAI,cACJ,oCAAC,MAAD,MACG,KAAK,UAAU,IAAI,CAAC,aACnB,oCAAC,MAAD;AAAA,IAAI,KAAK,SAAS;AAAA,IAAK,WAAU;AAAA,KAC/B,oCAAC,KAAD;AAAA,IAAG,MAAM,SAAS;AAAA,KAAM,SAAS;AAAA;;;AC5F/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQO;AAIP,+BAAwB;AAGjB,IAAI,SAAyB,OAAO,EAAE,cAAc;AACzD,MAAI,WAAW,MAAM,QAAQ;AAC7B,MAAI,WAAW,SAAS,IAAI;AAC5B,MAAI,WAAW,SAAS,IAAI;AAE5B,MAAI,SAAkC;AACtC,MAAI,CAAC;AAAU,WAAO,OAAO;AAC7B,MAAI,CAAC;AAAU,WAAO,SAAS;AAE/B,MAAI,OAAO,KAAK,QAAQ,QAAQ;AAC9B,WAAO;AAAA;AAGT,SAAO,4BAAS;AAAA;AAGH,qBAAqB;AAChC,MAAI,SAAS;AACf,MAAI,aAAa;AACjB,QAAM,EAAE,UAAU;AAClB,wBAAsB,MAAc,OAA4B;AAC9D,QAAI;AACF,UAAI;AAEJ,UAAI,SAAS,OAAO;AAClB,YAAI,OAAO,UAAU,UAAU;AAC7B,iBAAO,KAAK,MAAM;AAAA,eACb;AACL,iBAAO;AAAA;AAAA;AAGX,YAAM;AAAA,aACC,GAAP;AAAA;AAAA;AAGJ,SACE,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,IAAG;AAAA,KAEK,oCAAC,KAAD,MACJ,oCAAC,SAAD,MAEJ,oCAAC,UAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAS,CAAC,MAAM;AACd,aAAO;AAAA;AAAA,KAEV,eAKD,oCAAC,MAAD,MAAI,sBACJ,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,UAAU,CAAC,MAAM;AACf,YAAM,EAAE,WAAW;AACnB,aAAO,YAAY,OAAO;AAAA;AAAA;AAAA;;;AC5EpC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4D;AAG7C,sBAAsB;AACnC,SACE,0DACE,oCAAC,MAAD,MAAI,WACJ,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,KACL,oCAAC,MAAD,MAAI,WAER,oCAAC,KAAD,MAAG,6CACyC,KAC1C,oCAAC,QAAD,MAAM,4BAA8B,uGAGtC,oCAAC,MAAD,MAAI,WACJ,oCAAC,KAAD,MAAG,qSAMH,oCAAC,KAAD,MAAG,4DACH,oCAAC,MAAD,MAAI,cACJ,oCAAC,KAAD,MAAG,cACU,KACX,oCAAC,KAAD;AAAA,IAAG,MAAK;AAAA,KAAkF,kBAEtF,MAGN,oCAAC,KAAD,MAAG,oCAC+B,oCAAC,QAAD,MAAM,aAAe;AAAA;;;ATrB7D,oBAAkC;AAC3B,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEV,yBAAyB;AAAA,IACvB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEV,wBAAwB;AAAA,IACtB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEV,uBAAuB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEV,sBAAsB;AAAA,IACpB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEV,oBAAoB;AAAA,IAClB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEV,gBAAgB;AAAA,IACd,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEV,gBAAgB;AAAA,IACd,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEV,gBAAgB;AAAA,IACd,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;",
  "names": []
}
